{
  "$schema": "https://microsoftgraph.github.io/msgraph-metadata/graph-permissions-schema.json",
  "permissions": {
    "Policy.Read.All": {
      "schemes": {
        "DelegatedWork": {
          "adminDisplayName": "Read your organization\u0027s policies",
          "adminDescription": "Allows the app to read your organization\u0027s policies on behalf of the signed-in user.",
          "userDisplayName": "Read your organization\u0027s policies",
          "userDescription": "Allows the app to read your organization\u0027s policies on your behalf.",
          "requiresAdminConsent": true
        },
        "Application": {
          "adminDisplayName": "Read your organization\u0027s policies",
          "adminDescription": "Allows the app to read all your organization\u0027s policies without a signed in user."
        }
      },
      "pathSets": [
        {
          "schemeKeys": [
            "Application",
            "DelegatedWork"
          ],
          "methods": [
            "GET"
          ],
          "paths": {
            "/policies/appmanagementpolicies/{id}/appliesto": {},
            "/policies/claimsmappingpolicies/{id}/appliesto": {},
            "/policies/homerealmdiscoverypolicies/{id}/appliesto": {},
            "/policies/tokenissuancepolicies/{id}/appliesto": {},
            "/policies/tokenlifetimepolicies/{id}/appliesto": {},
            "/policies/adminconsentrequestpolicy": {},
            "/identity/events/onsignupstart": {},
            "/identity/events/onsignupstart/{id}": {},
            "/identitygovernance/accessreviews/policy": {},
            "/policies/accessreviewpolicy": {},
            "/policies/activitybasedtimeoutpolicies": {},
            "/policies/activitybasedtimeoutpolicies/{id}": {},
            "/policies/appmanagementpolicies": {},
            "/policies/appmanagementpolicies/{id}": {},
            "/policies/authenticationflowspolicy": {},
            "/policies/authorizationpolicy/authorizationpolicy": {},
            "/policies/claimsmappingpolicies": {},
            "/policies/claimsmappingpolicies/{id}": {},
            "/policies/crosstenantaccesspolicy": {},
            "/policies/crosstenantaccesspolicy/default": {},
            "/policies/crosstenantaccesspolicy/partners": {},
            "/policies/crosstenantaccesspolicy/partners/{id}": {},
            "/policies/defaultappmanagementpolicy": {},
            "/policies/externalidentitiespolicy": {},
            "/policies/homerealmdiscoverypolicies": {},
            "/policies/homerealmdiscoverypolicies/{id}": {},
            "/policies/tokenissuancepolicies": {},
            "/policies/tokenissuancepolicies/{id}": {},
            "/policies/tokenlifetimepolicies": {},
            "/policies/tokenlifetimepolicies/{id}": {},
            "/trustframework/policies": {},
            "/trustframework/policies/{id}": {}
          }
        },
        {
          "schemeKeys": [
            "Application",
            "DelegatedWork"
          ],
          "methods": [
            "PATCH",
            "DELETE",
            "GET"
          ],
          "paths": {
            "/identity/conditionalaccess/policies/{id}": {},
            "/identity/conditionalaccess/namedlocations/{id}": {}
          }
        },
        {
          "schemeKeys": [
            "Application",
            "DelegatedWork"
          ],
          "methods": [
            "PATCH",
            "GET"
          ],
          "paths": {
            "/identity/continuousaccessevaluationpolicy": {},
            "/policies/identitysecuritydefaultsenforcementpolicy": {}
          }
        },
        {
          "schemeKeys": [
            "Application",
            "DelegatedWork"
          ],
          "methods": [
            "POST",
            "GET"
          ],
          "paths": {
            "/identity/conditionalaccess/policies": {},
            "/applications/{id}/tokenissuancepolicies": {},
            "/applications/{id}/tokenlifetimepolicies": {},
            "/serviceprincipals/{id}/claimsmappingpolicies": {},
            "/serviceprincipals/{id}/homerealmdiscoverypolicies": {},
            "/serviceprincipals/{id}/tokenlifetimepolicies": {},
            "/identity/conditionalaccess/namedlocations": {}
          }
        },
        {
          "schemeKeys": [
            "Application",
            "DelegatedWork"
          ],
          "methods": [
            "DELETE"
          ],
          "paths": {
            "/applications/{id}/tokenissuancepolicies/{id}": {},
            "/applications/{id}/tokenlifetimepolicies/{id}": {},
            "/serviceprincipals/{id}/claimsmappingpolicies/{id}": {},
            "/serviceprincipals/{id}/homerealmdiscoverypolicies/{id}": {},
            "/serviceprincipals/{id}/tokenlifetimepolicies/{id": {}
          }
        },
        {
          "schemeKeys": [
            "DelegatedWork"
          ],
          "methods": [
            "GET"
          ],
          "paths": {
            "/policies/mobileappmanagementpolicies/{id}": {},
            "/policies/mobiledevicemanagementpolicies/{id}": {},
            "/policies/deviceregistrationpolicy": {},
            "/policies/mobileappmanagementpolicies": {},
            "/policies/mobileappmanagementpolicies/{id}/includedgroups": {},
            "/policies/mobiledevicemanagementpolicies": {},
            "/policies/mobiledevicemanagementpolicies/{id}/includedgroups": {},
            "/tenantrelationships/managedtenants/conditionalaccesspolicycoverages": {},
            "/tenantrelationships/managedtenants/conditionalaccesspolicycoverages/{id}": {}
          }
        },
        {
          "schemeKeys": [
            "Application",
            "DelegatedWork",
            "DelegatedPersonal"
          ],
          "methods": [
            "GET"
          ],
          "paths": {
            "/policies/b2cauthenticationmethodspolicy": {}
          }
        }
      ]
    },
    "Policy.Read.ConditionalAccess": {
      "schemes": {
        "DelegatedWork": {
          "adminDisplayName": "Read your organization\u0027s conditional access policies",
          "adminDescription": "Allows the app to read your organization\u0027s conditional access policies on behalf of the signed-in user.",
          "userDisplayName": "Read your organization\u0027s conditional access policies",
          "userDescription": "Allows the app to read your organization\u0027s conditional access policies on your behalf."
        },
        "Application": {
          "adminDisplayName": "Read your organization\u0027s conditional access policies",
          "adminDescription": "Allows the app to read your organization\u0027s conditional access policies, without a signed-in user."
        }
      },
      "pathSets": [
        {
          "schemeKeys": [
            "Application",
            "DelegatedWork"
          ],
          "methods": [
            "GET"
          ],
          "paths": {
            "/identity/conditionalaccess/authenticationcontextclassreferences": {},
            "/identity/conditionalaccess/authenticationcontextclassreferences/{id}": {}
          }
        }
      ]
    },
    "Policy.Read.PermissionGrant": {
      "schemes": {
        "DelegatedWork": {
          "adminDisplayName": "Read consent and permission grant policies",
          "adminDescription": "Allows the app to read policies related to consent and permission grants for applications, on behalf of the signed-in user.",
          "userDisplayName": "Read consent and permission grant policies",
          "userDescription": "Allows the app to read policies related to consent and permission grants for applications, on your behalf.",
          "requiresAdminConsent": true
        },
        "Application": {
          "adminDisplayName": "Read consent and permission grant policies",
          "adminDescription": "Allows the app to read policies related to consent and permission grants for applications, without a signed-in user."
        }
      },
      "pathSets": [
        {
          "schemeKeys": [
            "Application",
            "DelegatedWork"
          ],
          "methods": [
            "GET"
          ],
          "paths": {
            "/policies/permissiongrantpolicies/{id}/excludes": {},
            "/policies/permissiongrantpolicies/{id}/includes": {},
            "/policies/permissiongrantpolicies": {},
            "/policies/permissiongrantpolicies/{id}": {}
          }
        }
      ]
    },
    "Policy.ReadWrite.AccessReview": {
      "schemes": {
        "DelegatedWork": {
          "adminDisplayName": "Read and write your organization\u0027s directory access review default policy",
          "adminDescription": "Allows the app to read and write your organization\u0027s directory access review default policy on behalf of the signed-in user.",
          "userDisplayName": "Read and write your organization\u0027s directory access review default policy",
          "userDescription": "Allows the app to read and write your organization\u0027s directory access review default policy on your behalf.",
          "requiresAdminConsent": true
        },
        "Application": {
          "adminDisplayName": "Read and write your organization\u0027s directory access review default policy",
          "adminDescription": "Allows the app to read and write your organization\u0027s directory access review default policy without a signed-in user."
        }
      },
      "pathSets": [
        {
          "schemeKeys": [
            "Application",
            "DelegatedWork"
          ],
          "methods": [
            "GET",
            "PATCH"
          ],
          "paths": {
            "/identitygovernance/accessreviews/policy": {},
            "/policies/accessreviewpolicy": {}
          }
        }
      ]
    },
    "Policy.ReadWrite.ApplicationConfiguration": {
      "schemes": {
        "DelegatedWork": {
          "adminDisplayName": "Read and write your organization\u0027s application configuration policies",
          "adminDescription": "Allows the app to read and write your organization\u0027s application configuration policies on behalf of the signed-in user.  This includes policies such as activityBasedTimeoutPolicy, claimsMappingPolicy, homeRealmDiscoveryPolicy,  tokenIssuancePolicy and tokenLifetimePolicy.",
          "userDisplayName": "Read and write your organization\u0027s application configuration policies",
          "userDescription": "Allows the app to read and write your organization\u0027s application configuration policies on your behalf.  This includes policies such as activityBasedTimeoutPolicy, claimsMappingPolicy, homeRealmDiscoveryPolicy, tokenIssuancePolicy  and tokenLifetimePolicy.",
          "requiresAdminConsent": true
        },
        "Application": {
          "adminDisplayName": "Read and write your organization\u0027s application configuration policies",
          "adminDescription": "Allows the app to read and write your organization\u0027s application configuration policies, without a signed-in user.  This includes policies such as activityBasedTimeoutPolicy, claimsMappingPolicy, homeRealmDiscoveryPolicy, tokenIssuancePolicy  and tokenLifetimePolicy."
        }
      },
      "pathSets": [
        {
          "schemeKeys": [
            "Application",
            "DelegatedWork"
          ],
          "methods": [
            "GET"
          ],
          "paths": {
            "/policies/appmanagementpolicies/{id}/appliesto": {},
            "/policies/claimsmappingpolicies/{id}/appliesto": {},
            "/policies/homerealmdiscoverypolicies/{id}/appliesto": {},
            "/policies/tokenissuancepolicies/{id}/appliesto": {},
            "/policies/tokenlifetimepolicies/{id}/appliesto": {}
          }
        },
        {
          "schemeKeys": [
            "Application",
            "DelegatedWork"
          ],
          "methods": [
            "POST"
          ],
          "paths": {
            "/applications/{id}/appmanagementpolicies": {}
          }
        },
        {
          "schemeKeys": [
            "Application",
            "DelegatedWork"
          ],
          "methods": [
            "DELETE"
          ],
          "paths": {
            "/applications/{id}/tokenissuancepolicies/{id}": {},
            "/applications/{id}/tokenlifetimepolicies/{id}": {},
            "/serviceprincipals/{id}/claimsmappingpolicies/{id}": {},
            "/serviceprincipals/{id}/homerealmdiscoverypolicies/{id}": {},
            "/serviceprincipals/{id}/tokenlifetimepolicies/{id": {}
          }
        },
        {
          "schemeKeys": [
            "Application",
            "DelegatedWork"
          ],
          "methods": [
            "GET",
            "POST"
          ],
          "paths": {
            "/applications/{id}/tokenissuancepolicies": {},
            "/applications/{id}/tokenlifetimepolicies": {},
            "/serviceprincipals/{id}/claimsmappingpolicies": {},
            "/serviceprincipals/{id}/homerealmdiscoverypolicies": {},
            "/serviceprincipals/{id}/tokenlifetimepolicies": {},
            "/identity/events/onsignupstart": {},
            "/policies/activitybasedtimeoutpolicies": {},
            "/policies/appmanagementpolicies": {},
            "/policies/claimsmappingpolicies": {},
            "/policies/homerealmdiscoverypolicies": {},
            "/policies/tokenissuancepolicies": {},
            "/policies/tokenlifetimepolicies": {}
          }
        },
        {
          "schemeKeys": [
            "Application",
            "DelegatedWork"
          ],
          "methods": [
            "GET",
            "DELETE",
            "PATCH",
            "PUT"
          ],
          "paths": {
            "/identity/events/onsignupstart/{id}": {}
          }
        },
        {
          "schemeKeys": [
            "Application",
            "DelegatedWork"
          ],
          "methods": [
            "GET",
            "DELETE",
            "PATCH"
          ],
          "paths": {
            "/policies/activitybasedtimeoutpolicies/{id}": {},
            "/policies/appmanagementpolicies/{id}": {},
            "/policies/claimsmappingpolicies/{id}": {},
            "/policies/homerealmdiscoverypolicies/{id}": {},
            "/policies/tokenissuancepolicies/{id}": {},
            "/policies/tokenlifetimepolicies/{id}": {}
          }
        },
        {
          "schemeKeys": [
            "Application",
            "DelegatedWork"
          ],
          "methods": [
            "GET",
            "PATCH"
          ],
          "paths": {
            "/policies/defaultappmanagementpolicy": {}
          }
        }
      ]
    },
    "Policy.ReadWrite.AuthenticationFlows": {
      "schemes": {
        "DelegatedWork": {
          "adminDisplayName": "Read and write authentication flow policies",
          "adminDescription": "Allows the app to read and write the authentication flow policies, on behalf of the signed-in user. ",
          "userDisplayName": "Read and write your authentication flow policies",
          "userDescription": "Allows the app to read and write the authentication flow policies for your tenant, on your behalf.",
          "requiresAdminConsent": true
        },
        "Application": {
          "adminDisplayName": "Read and write authentication flow policies",
          "adminDescription": "Allows the app to read and write all authentication flow policies for the tenant, without a signed-in user."
        }
      },
      "pathSets": [
        {
          "schemeKeys": [
            "Application",
            "DelegatedWork"
          ],
          "methods": [
            "GET"
          ],
          "paths": {
            "/policies/authenticationflowspolicy": {}
          }
        }
      ]
    },
    "Policy.ReadWrite.AuthenticationMethod": {
      "schemes": {
        "DelegatedWork": {
          "adminDisplayName": "Read and write authentication method policies",
          "adminDescription": "Allows the app to read and write the authentication method policies, on behalf of the signed-in user.\u00A0",
          "userDisplayName": "Read and write your authentication method policies ",
          "userDescription": "Allows the app to read and write the authentication method policies for your tenant, on your behalf.",
          "requiresAdminConsent": true
        },
        "Application": {
          "adminDisplayName": "Read and write all authentication method policies\u00A0",
          "adminDescription": "Allows the app to read and write all authentication method policies for the tenant, without a signed-in user.\u00A0"
        }
      },
      "pathSets": [
        {
          "schemeKeys": [
            "DelegatedWork"
          ],
          "methods": [
            "DELETE",
            "GET",
            "PATCH"
          ],
          "paths": {
            "/policies/authenticationmethodspolicy/authenticationmethodconfigurations/email": {},
            "/policies/authenticationmethodspolicy/authenticationmethodconfigurations/fido2": {},
            "/policies/authenticationmethodspolicy/authenticationmethodconfigurations/passwordlessmicrosoftauthenticator": {},
            "/policies/authenticationmethodspolicy/authenticationmethodconfigurations/x509certificate": {}
          }
        },
        {
          "schemeKeys": [
            "Application",
            "DelegatedWork",
            "DelegatedPersonal"
          ],
          "methods": [
            "PATCH"
          ],
          "paths": {
            "/policies/b2cauthenticationmethodspolicy": {}
          }
        },
        {
          "schemeKeys": [
            "Application",
            "DelegatedWork"
          ],
          "methods": [
            "DELETE",
            "GET",
            "PATCH"
          ],
          "paths": {
            "/policies/authenticationmethodspolicy/authenticationmethodconfigurations/microsoftauthenticator": {},
            "/policies/authenticationmethodspolicy/authenticationmethodconfigurations/sms": {},
            "/policies/authenticationmethodspolicy/authenticationmethodconfigurations/temporaryaccesspass": {}
          }
        },
        {
          "schemeKeys": [
            "Application",
            "DelegatedWork"
          ],
          "methods": [
            "GET",
            "PATCH"
          ],
          "paths": {
            "/policies/authenticationmethodspolicy": {}
          }
        }
      ]
    },
    "Policy.ReadWrite.Authorization": {
      "schemes": {
        "DelegatedWork": {
          "adminDisplayName": "Read and write your organization\u0027s authorization policy",
          "adminDescription": "Allows the app to read and write your organization\u0027s authorization policy on behalf of the signed-in user.  For example, authorization policies can control some of the permissions that the out-of-the-box user role has by default.",
          "userDisplayName": "Read and write your organization\u0027s authorization policy",
          "userDescription": "Allows the app to read and write your organization\u0027s authorization policy on your behalf. For example, authorization policies can control some of the permissions that the out-of-the-box user role has by default.",
          "requiresAdminConsent": true
        },
        "Application": {
          "adminDisplayName": "Read and write your organization\u0027s authorization policy",
          "adminDescription": "Allows the app to read and write your organization\u0027s authorization policy without a signed in user. For example, authorization policies can control some of the permissions that the out-of-the-box user role has by default."
        }
      },
      "pathSets": [
        {
          "schemeKeys": [
            "Application",
            "DelegatedWork"
          ],
          "methods": [
            "DELETE",
            "PATCH"
          ],
          "paths": {
            "/groups/{id}/settings/{id}": {},
            "/settings/{id}": {}
          }
        },
        {
          "schemeKeys": [
            "Application",
            "DelegatedWork"
          ],
          "methods": [
            "GET",
            "PATCH"
          ],
          "paths": {
            "/policies/authorizationpolicy/authorizationpolicy": {}
          }
        }
      ]
    },
    "Policy.ReadWrite.ConditionalAccess": {
      "schemes": {
        "DelegatedWork": {
          "adminDisplayName": "Read and write your organization\u0027s conditional access policies",
          "adminDescription": "Allows the app to read and write your organization\u0027s conditional access policies on behalf of the signed-in user.",
          "userDisplayName": "Read and write your organization\u0027s conditional access policies",
          "userDescription": "Allows the app to read and write your organization\u0027s conditional access policies on your behalf.",
          "requiresAdminConsent": true
        },
        "Application": {
          "adminDisplayName": "Read and write your organization\u0027s conditional access policies",
          "adminDescription": "Allows the app to read and write your organization\u0027s conditional access policies, without a signed-in user."
        }
      },
      "pathSets": [
        {
          "schemeKeys": [
            "Application",
            "DelegatedWork"
          ],
          "methods": [
            "PATCH",
            "DELETE"
          ],
          "paths": {
            "/identity/conditionalaccess/policies/{id}": {},
            "/identity/conditionalaccess/namedlocations/{id}": {}
          }
        },
        {
          "schemeKeys": [
            "Application",
            "DelegatedWork"
          ],
          "methods": [
            "PATCH"
          ],
          "paths": {
            "/identity/continuousaccessevaluationpolicy": {},
            "/policies/identitysecuritydefaultsenforcementpolicy": {},
            "/identity/conditionalaccess/authenticationcontextclassreferences/{id}": {}
          }
        },
        {
          "schemeKeys": [
            "Application",
            "DelegatedWork"
          ],
          "methods": [
            "POST"
          ],
          "paths": {
            "/identity/conditionalaccess/policies": {},
            "/identity/conditionalaccess/namedlocations": {}
          }
        },
        {
          "schemeKeys": [
            "DelegatedWork"
          ],
          "methods": [
            "GET"
          ],
          "paths": {
            "/tenantrelationships/managedtenants/conditionalaccesspolicycoverages": {},
            "/tenantrelationships/managedtenants/conditionalaccesspolicycoverages/{id}": {}
          }
        },
        {
          "schemeKeys": [
            "Application",
            "DelegatedWork"
          ],
          "methods": [
            "GET",
            "POST"
          ],
          "paths": {
            "/identity/conditionalaccess/authenticationcontextclassreferences": {}
          }
        }
      ]
    },
    "Policy.ReadWrite.ConsentRequest": {
      "schemes": {
        "DelegatedWork": {
          "adminDisplayName": "Read and write consent request policy",
          "adminDescription": "Allows the app to read and write your organization\u0027s consent requests policy on behalf of the signed-in user.",
          "userDisplayName": "Read and write consent request policy",
          "userDescription": "Allows the app to read and write your organization\u0027s consent request policy on your behalf.",
          "requiresAdminConsent": true
        },
        "Application": {
          "adminDisplayName": "Read and write your organization\u0027s consent request policy",
          "adminDescription": "Allows the app to read and write your organization\u0027s consent requests policy without a signed-in user."
        }
      },
      "pathSets": [
        {
          "schemeKeys": [
            "Application",
            "DelegatedWork"
          ],
          "methods": [
            "GET",
            "PUT"
          ],
          "paths": {
            "/policies/adminconsentrequestpolicy": {}
          }
        }
      ]
    },
    "Policy.ReadWrite.CrossTenantAccess": {
      "schemes": {
        "DelegatedWork": {
          "adminDisplayName": "Read and write your organization\u0027s cross tenant access policies",
          "adminDescription": "Allows the app to read and write your organization\u0027s cross tenant access policies on behalf of the signed-in user.",
          "userDisplayName": "Read and write your organization\u0027s cross tenant access policies",
          "userDescription": "Allows the app to read and write your organization\u0027s cross tenant access policies on your behalf.",
          "requiresAdminConsent": true
        },
        "Application": {
          "adminDisplayName": "Read and write your organization\u0027s cross tenant access policies",
          "adminDescription": "Allows the app to read and write your organization\u0027s cross tenant access policies without a signed-in user."
        }
      },
      "pathSets": [
        {
          "schemeKeys": [
            "Application",
            "DelegatedWork"
          ],
          "methods": [
            "GET",
            "PATCH"
          ],
          "paths": {
            "/policies/crosstenantaccesspolicy": {},
            "/policies/crosstenantaccesspolicy/default": {}
          }
        },
        {
          "schemeKeys": [
            "Application",
            "DelegatedWork"
          ],
          "methods": [
            "GET",
            "POST"
          ],
          "paths": {
            "/policies/crosstenantaccesspolicy/partners": {}
          }
        },
        {
          "schemeKeys": [
            "Application",
            "DelegatedWork"
          ],
          "methods": [
            "GET",
            "DELETE",
            "PATCH"
          ],
          "paths": {
            "/policies/crosstenantaccesspolicy/partners/{id}": {}
          }
        },
        {
          "schemeKeys": [
            "Application",
            "DelegatedWork"
          ],
          "methods": [
            "POST"
          ],
          "paths": {
            "/policies/crosstenantaccesspolicy/default/resettosystemdefault": {}
          }
        }
      ]
    },
    "Policy.ReadWrite.DeviceConfiguration": {
      "schemes": {
        "DelegatedWork": {
          "adminDisplayName": "Read and write your organization\u0027s device configuration policies",
          "adminDescription": "Allows the app to read and write your organization\u0027s device configuration policies on behalf of the signed-in user.  For example, device registration policy can limit initial provisioning controls using quota restrictions, additional authentication and authorization checks.",
          "userDisplayName": "Read and write your organization\u0027s device configuration policies",
          "userDescription": "Allows the app to read and write your organization\u0027s device configuration policies on your behalf.  For example, device registration policy can limit initial provisioning controls using quota restrictions, additional authentication and authorization checks.",
          "requiresAdminConsent": true
        }
      },
      "pathSets": [
        {
          "schemeKeys": [
            "DelegatedWork"
          ],
          "methods": [
            "GET",
            "PUT"
          ],
          "paths": {
            "/policies/deviceregistrationpolicy": {}
          }
        }
      ]
    },
    "Policy.ReadWrite.ExternalIdentities": {
      "schemes": {},
      "pathSets": [
        {
          "schemeKeys": [
            "Application",
            "DelegatedWork"
          ],
          "methods": [
            "GET",
            "PATCH"
          ],
          "paths": {
            "/policies/externalidentitiespolicy": {}
          }
        }
      ]
    },
    "Policy.ReadWrite.FeatureRollout": {
      "schemes": {
        "DelegatedWork": {
          "adminDisplayName": "Read and write your organization\u0027s feature rollout policies",
          "adminDescription": "Allows the app to read and write your organization\u0027s feature rollout policies on behalf of the signed-in user. Includes abilities to assign and remove users and groups to rollout of a specific feature.",
          "userDisplayName": "Read and write your organization\u0027s feature rollout policies",
          "userDescription": "Allows the app to read and write your organization\u0027s feature rollout policies on your behalf. Includes abilities to assign and remove users and groups to rollout of a specific feature.",
          "requiresAdminConsent": true
        },
        "Application": {
          "adminDisplayName": "Read and write feature rollout policies",
          "adminDescription": "Allows the app to read and write feature rollout policies without a signed-in user. Includes abilities to assign and remove users and groups to rollout of a specific feature."
        }
      },
      "pathSets": []
    },
    "Policy.ReadWrite.MobilityManagement": {
      "schemes": {
        "DelegatedWork": {
          "adminDisplayName": "Read and write your organization\u0027s mobility management policies",
          "adminDescription": "Allows the app to read and write your organization\u0027s mobility management policies on behalf of the signed-in user.  For example, a mobility management policy can set the enrollment scope for a given mobility management application.",
          "userDisplayName": "Read and write your organization\u0027s mobility management policies",
          "userDescription": "Allows the app to read and write your organization\u0027s mobility management policies on your behalf.  For example, a mobility management policy can set the enrollment scope for a given mobility management application.",
          "requiresAdminConsent": true
        }
      },
      "pathSets": [
        {
          "schemeKeys": [
            "DelegatedWork"
          ],
          "methods": [
            "DELETE",
            "GET",
            "PATCH"
          ],
          "paths": {
            "/policies/mobileappmanagementpolicies/{id}": {},
            "/policies/mobiledevicemanagementpolicies/{id}": {}
          }
        },
        {
          "schemeKeys": [
            "DelegatedWork"
          ],
          "methods": [
            "DELETE"
          ],
          "paths": {
            "/policies/mobileappmanagementpolicies/{id}/includedgroups/{id}": {},
            "/policies/mobiledevicemanagementpolicies/{id}/includedgroups/{id}": {}
          }
        },
        {
          "schemeKeys": [
            "DelegatedWork"
          ],
          "methods": [
            "GET"
          ],
          "paths": {
            "/policies/mobileappmanagementpolicies": {},
            "/policies/mobiledevicemanagementpolicies": {}
          }
        },
        {
          "schemeKeys": [
            "DelegatedWork"
          ],
          "methods": [
            "GET",
            "POST"
          ],
          "paths": {
            "/policies/mobileappmanagementpolicies/{id}/includedgroups": {},
            "/policies/mobiledevicemanagementpolicies/{id}/includedgroups": {}
          }
        }
      ]
    },
    "Policy.ReadWrite.PermissionGrant": {
      "schemes": {
        "DelegatedWork": {
          "adminDisplayName": "Manage consent and permission grant policies",
          "adminDescription": "Allows the app to manage policies related to consent and permission grants for applications, on behalf of the signed-in user.",
          "userDisplayName": "Manage consent and permission grant policies",
          "userDescription": "Allows the app to manage policies related to consent and permission grants for applications, on behalf of the signed-in user.",
          "requiresAdminConsent": true
        },
        "Application": {
          "adminDisplayName": "Manage consent and permission grant policies",
          "adminDescription": "Allows the app to manage policies related to consent and permission grants for applications, without a signed-in user."
        }
      },
      "pathSets": [
        {
          "schemeKeys": [
            "Application",
            "DelegatedWork"
          ],
          "methods": [
            "POST"
          ],
          "paths": {
            "/serviceprincipals/{id}/delegatedpermissionclassifications": {},
            "/policies/permissiongrantpolicies/{id}/excludes": {},
            "/policies/permissiongrantpolicies/{id}/includes": {}
          }
        },
        {
          "schemeKeys": [
            "Application",
            "DelegatedWork"
          ],
          "methods": [
            "GET",
            "POST"
          ],
          "paths": {
            "/policies/permissiongrantpolicies": {}
          }
        },
        {
          "schemeKeys": [
            "Application",
            "DelegatedWork"
          ],
          "methods": [
            "GET",
            "DELETE",
            "PATCH"
          ],
          "paths": {
            "/policies/permissiongrantpolicies/{id}": {}
          }
        },
        {
          "schemeKeys": [
            "Application",
            "DelegatedWork"
          ],
          "methods": [
            "DELETE"
          ],
          "paths": {
            "/policies/permissiongrantpolicies/{id}/excludes/{id}": {},
            "/policies/permissiongrantpolicies/{id}/includes/{id}": {},
            "/serviceprincipals/{id}/delegatedpermissionclassifications/{id}": {}
          }
        }
      ]
    },
    "Policy.ReadWrite.TrustFramework": {
      "schemes": {
        "DelegatedWork": {
          "adminDisplayName": "Read and write your organization\u0027s trust framework policies",
          "adminDescription": "Allows the app to read and write your organization\u0027s trust framework policies on behalf of the signed-in user.",
          "userDisplayName": "Read and write trust framework policies",
          "userDescription": "Allows the app to read and write your organization\u0027s trust framework policies on your behalf.",
          "requiresAdminConsent": true
        },
        "Application": {
          "adminDisplayName": "Read and write your organization\u0027s trust framework policies",
          "adminDescription": "Allows the app to read and write your organization\u0027s trust framework policies without a signed in user."
        }
      },
      "pathSets": [
        {
          "schemeKeys": [
            "Application",
            "DelegatedWork"
          ],
          "methods": [
            "GET",
            "POST"
          ],
          "paths": {
            "/trustframework/policies": {}
          }
        },
        {
          "schemeKeys": [
            "Application",
            "DelegatedWork"
          ],
          "methods": [
            "GET",
            "DELETE",
            "PUT"
          ],
          "paths": {
            "/trustframework/policies/{id}": {}
          }
        }
      ]
    }
  }
}